/* ----------------------------------------------------------------------------------------
|
|    The constructor-class for the maze 
|
\-----------------------------------------------------------------------------------------*/
function Game(maze, level) {
    this.maze = maze
    this.level = level
}

var mazeGame = new Game ("", 1)






/* ----------------------------------------------------------------------------------------
|
|    Generating the current map-instance to the DOM.
|    also includes jQuery functionalities (gameplay & visuals)
|
\----------------------------------------------------------------------------------------*/

Game.prototype.makeMap = function () {

    //Clears the map before the level starts
    $(".gameboard").empty() 

    //creates empty div for each array-element, then adds it to the gameboard-div "gameboard"
    for (var i=0; i<20; i++) { 
        for(var j=0; j<32; j++) {
            var cellDiv = $( "<div id='" + i + "-" + j + "' class='cell'></div>" );
            $(".gameboard").append(cellDiv);


            //Adding CSS-classes to the different array-elements. 
            //For visuals AND gameplay-functionality (see jQuery section below)
            if( this.maze[i][j] == "O" ) {
                $( "#" + i + "-" + j ).addClass( "game-area" );

                //Adds visual borders only between "wall" and "game-area" divs
                if(this.maze[i][j-1] === "*") {
                    $( "#" + i + "-" + j ).addClass( "left-border" )
                }
                if(this.maze[i][j+1] === "*") {
                    $( "#" + i + "-" + j ).addClass( "right-border" )
                }
                if(this.maze[i-1][j] === "*") {
                    $( "#" + i + "-" + j ).addClass( "top-border" )
                }
                if(i<19 && this.maze[i+1][j] === "*") {
                    $( "#" + i + "-" + j ).addClass( "bottom-border" )
                }
            }
            //Adding the wall class.
            if( this.maze[i][j] == "*" ) {
                $( "#" + i + "-" + j ).addClass("wall");
            }
        }
    }
}


var firstLevel = new Game([
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*"],
    ["*", "*", "*", "*", "*", "O", "O", "*", "*", "*", "*", "*", "*", "O", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*"],
    ["*", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ["*", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ["*", "O", "S", "S", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "F", "F", "O"],
    ["*", "O", "S", "S", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "F", "F", "O"],
    ["*", "O", "O", "O", "O", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "O", "O", "O", "O", "O"],
    ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
    ]);

    firstLevel.makeMap()